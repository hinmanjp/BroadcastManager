Notes:
- Church Handbook, on 2023-03-22, Section 29.7 states "Stream recordings of ward and stake meetings should be deleted within one day after the meeting."

- Vultr startup can hang. If it doesn't respond in 7 minutes, kill it and try again?

- Cannot currently run as a docker image because of the dependancy on OBS, which cannot currently run headless.

- OBS has a memory leak. System should be restarted daily.

Questions:
- Should the stream ONLY be live?
  - If someone joins late, should they be able to see the broadcast from the begining?
  - OR would the see the broadcast from where it is currently at?
  - Can someone watch the broadcast at 6pm, or 8pm, rather than at 1:30pm?


local server setup
- MS .net core runtimes
  - chown -R www-data:www-data /var/www/broadcastManager
- getssl certificate management
    chown :ssl-cert /etc/ssl/willowbrook-ward.org.*
    chmod 640 /etc/ssl/willowbrook-ward.org.{pfx,key,full.crt}

- OBS
  - configured to capture from HDMI input
  - stream to local nginx
- docker install of OvenMediaEngine?
- stunnel4 - for rtmp encryption
- nginx - for split push to OvenMediaEngine & remote server
- BroadcastManager

- wireguard vpn - for remote management
- vnc / rdp - remote management

BM starts VM running docker in Vultr via API calls
//BM run startup script on VM to run icecast docker container (infiniteproject/icecast)
  VM startup script needs to handle certificate retreival
  VM startup script runs docker container running nginx to convert RTMP stream to HLS / DASH stream
    - https://www.digitalocean.com/community/tutorials/how-to-set-up-a-video-streaming-server-using-nginx-rtmp-on-ubuntu-20-04
    - https://obsproject.com/forum/resources/how-to-set-up-your-own-private-rtmp-server-using-nginx.50/
  VM startup script runs docker container with blazor app for end user authentication

BM probes for VM startup completion
BM updates DNS records to point to VM current IP
BM pushes auth data to VM end user gui
BM Starts NGINX
BM Starts OBS RTMP stream to local NGINX

Local NGINX pushes RTMP stream to remote NGINX
Local NGINX provides HLS stream to BM for viewing

BM on pause switches OBS Scene from HDMI to pause
BM on resume switches OBS scene from pause to HDMI

BM on stop gets list of users & count from gui
BM destroys VM via API


End user GUI
  - Asks for keyword, name, number of people watching
  - validates keyword & date (against sqlite db / json list)
  - GUI sets an httponly auth cookie
  - after validation, gui switches to player screen, provides js w/ url for stream
  - js player requests hls stream from blazor app
  - blazor app serves hls files generated by nginx

