//stunnel pid directory in /var/run is removed on reboot. 
//  - modify stunnel config to store pid in tmp?

//update wireguard client to connect to vpn server
//setup vnc

// update existing db w/ primary key

REFACTOR willowbrook-ward.org to ifnorth.org
REPLACE ALL HARDCODED references to domain names with variables

Preserve Login for x hours. Discard after x hours.
  - create object with claims and last access.
  - Check last access on each auth request. revoke if too old. Update if recent enough.
  - Check / update last access on button clicks?

make video available until midnight 
  - nginx rtmp hls settings
  - schedule self destruct cron command


Configuration page
  - configuration class
  - bind mub blazor table to class
  - some settings are per ward - need to be saved in db
  - some settings are global - save in appsettings.json
  - load global settings on start
  - reload global settings on user login
  - load ward settings on user login

END USER Authentication to watch the broadcast
  - GUI for creating auth codes tied to unit & dates
  - have stream name = the unit/date auth code
  - Capture who is watching
  - Capture number watching
  - Send email when users logged in?
  - HOW to make sure this is captured & reported w/o getting lost?


// Persist login across page refresh

//Separate "Start Broadcast Server" from "Start Broadcast"
//Separate start of broadcast server & start of broadcast stream
  - Maybe have the stream terminate, and then restart as the broadcast starts?
  * Maybe stop stream, rm the pre-broadcast stream files, start the live stream, fade from black.
  - Would need to reset / overwrite the hls fragment ids on reconnect.
  # Maybe have nginx switch stream locations and reload?
  - What would happen with the viewing?

// Start OBS on "Start Broadcast" & stop OBS 5-10 seconds after Stop Broadcast?

Real user login

User management

Fix RTMP auth

// Shared state / button changes not working like it's supposed to...

// Responsive design for page layouts

Show remote player below local player
size the local player according to device size


// Modify enable / disable rtmp push to modify & start / stop stunnel
// setup stunnel as a service
// Update DNS isn't working at least some of the time
// Something is crashing during vm destroy
// Delete DNS isn't working
// Timer to destroy VM after xx time - let the remote viewers finish watching before the server goes away...
// startup OvenMediaEngin docker container on boot

// Start wireguard client on boot
  - it just happens. WG is created as a network interface.

// Watch CPU / memory usage on remote server
    - 0.3% CPU, < 1 GB RAM

// check to see if we already have a record of a remote broadcast server running
  - if we do - check to see if the VULTR API shows it is running
  - if it is, check to see if we can connect to it
  - destroy it if we can't connect
  - start a new one if it doesn't exist

Have OBS Websocket read all available scenes & create buttons for each one.
  - Only the currently active button would be disabled. 
  - Start & stop broadcast would still be mutually exclusive - based on state.
  - Shared state would reflect broadcast state, remote state, and current scene. Maybe connection state between local & remote?

Dev URL parameter that allows using local broadcast controls even if remote vm is not running.


//Document install & config of tightvnc 

//VNC can be started from ssh
//OBS can be started on VNC desktop for configuration purposes
